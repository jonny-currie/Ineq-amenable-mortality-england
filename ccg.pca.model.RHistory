#=== 2nd analysis code ===
#=== SET WORKING DIRECTORY TO FOLDER WITH LOOKUPS AND FUNDING DATA ===
setwd("c://users/jo122989/desktop/phst2/ampaper/2nd analysis")
#=== LOAD LOOKUP FILES ===
oa.pct <- read.csv("OA to PCT lookup.csv", stringsAsFactors = FALSE)
oa.lsoa <- read.csv("OA to LSOA lookup.csv", stringsAsFactors = FALSE)
lsoa.popns <- read.csv("LSOA Populations.csv", stringsAsFactors = FALSE)
lsoa.ccg <- read.csv("LSOA to CCG lookup.csv", stringsAsFactors = FALSE)
lat.ccg <- read.csv("AT to CCG lookup.csv", stringsAsFactors = FALSE)
utla.ltla <- read.csv("UTLA to LTLA lookup.csv", stringsAsFactors = FALSE)
#=== LOAD DPLYR AND STRINGR PACKAGES ===
library(dplyr)
library(stringr)
#=== CREATE MERGED LOOKUP ===
pct.lsoa <- left_join(oa.pct, oa.lsoa, by = "oa.code")
pct.ccg <- left_join(pct.lsoa, lsoa.ccg, by = "lsoa.code")
pct.utla <- left_join(pct.ccg, utla.ltla, by = "ltla.name")
lookup <- left_join(pct.utla, lsoa.popns, by = "lsoa.code")
#=== LOAD FUNDING DATA FILES ===
pct.fund <- read.csv("pct.allocations.csv", stringsAsFactors = FALSE)
ccg.fund <- read.csv("ccg.allocations.csv", stringsAsFactors = FALSE)
ccg.pca.fund <- read.csv("ccg.pca1315.csv", stringsAsFactors = FALSE)
ccg.spec.fund <- read.csv("ccg.spec.alloc.csv", stringsAsFactors = FALSE)
ltph.fund <- read.csv("ltla.ph.allocs.csv", stringsAsFactors = FALSE)
utph.fund <- read.csv("utla.ph.allocs.csv", stringsAsFactors = FALSE)
#=== AMEND CCG VARIABLES TO REMOVE TRAILING SPACES ===
lookup$ccg.name = substr(lookup$ccg.name, 1, nchar(lookup$ccg.name)-1)
ccg.pca.fund$ccg.name = substr(ccg.pca.fund$ccg.name, 1, nchar(ccg.pca.fund$ccg.name)-1)
#=== MERGE FUNDING DATA WITH LOOKUP FILE ===
pct.fund.lookup <- left_join(lookup, pct.fund, by = "pct.name")
add.ccg.fund <- left_join(pct.fund.lookup, ccg.fund, by = "ccg.name")
add.pca.fund <- left_join(add.ccg.fund, ccg.pca.fund, by = "ccg.name")
add.spec.fund <- left_join(add.pca.fund, ccg.spec.fund, by = "ccg.name")
add.ltph.fund <- left_join(add.spec.fund, ltph.fund, by = "ltla.name")
utph.fund <- left_join(add.ltph.fund, utph.fund, by = "utla.name")
#===REMOVE DUPLICATE ROWS AT OA LEVEL===
utph.fund =select(utph.fund, -1)
utph.fund <- distinct(utph.fund)
#=== CALCULATE POPULATION DENOMINATORS FOR EACH GEOGRAPHICAL LEVEL ===
pct.popn <- utph.fund %>% group_by(pct.name) %>% summarise(pct.popn=sum(lsoa.popn))
ccg.popn <- utph.fund %>% group_by(ccg.name) %>% summarise(ccg.popn=sum(lsoa.popn))
ltla.popn <- utph.fund %>% group_by(ltla.name) %>% summarise(ltla.popn=sum(lsoa.popn))
utla.popn <- utph.fund %>% group_by(utla.name) %>% summarise(utla.popn=sum(lsoa.popn))
#=== MERGE POPULATION COUNTS WITH FUNDING LOOKUP ===
add.pct.popn <- left_join(utph.fund, pct.popn, by = "pct.name")
add.ccg.popn <- left_join(add.pct.popn, ccg.popn, by = "ccg.name")
add.ltla.popn <- left_join(add.ccg.popn, ltla.popn, by = "ltla.name")
add.utla.popn <- left_join(add.ltla.popn, utla.popn, by = "utla.name")
#=== AMEND PH FUNDING VARIABLES SUCH THAT NA BECOMES 0 ===
ltph.13.zero <- add.utla.popn %>% mutate(ltla.ph.alloc.1314 = ifelse(is.na(ltla.ph.alloc.1314),0,ltla.ph.alloc.1314))
ltph.14.zero <- ltph.13.zero %>% mutate(ltla.ph.alloc.1415 = ifelse(is.na(ltla.ph.alloc.1415),0,ltla.ph.alloc.1415))
utph.13.zero <- ltph.14.zero %>% mutate(utla.ph.alloc.1314 = ifelse(is.na(utla.ph.alloc.1314),0,utla.ph.alloc.1314))
pre_agg_fund <- utph.13.zero %>% mutate(utla.ph.alloc.1415 = ifelse(is.na(utla.ph.alloc.1415),0,utla.ph.alloc.1415))
#=== GENERATE LSOA-LEVEL FUNDING ALLOCATIONS FOR EACH GEOGRAPHICAL LEVEL ===
pct.2007 <- mutate(pre_agg_fund, lsoa.2007 = alloc.0708 * (lsoa.popn/pct.popn))
pct.2008 <- mutate(pct.2007, lsoa.2008 = alloc.0809 * (lsoa.popn/pct.popn))
pct.2009 <- mutate(pct.2008, lsoa.2009 = alloc.0910 * (lsoa.popn/pct.popn))
pct.2010 <- mutate(pct.2009, lsoa.2010 = alloc.1011 * (lsoa.popn/pct.popn))
pct.2011 <- mutate(pct.2010, lsoa.2011 = alloc.1112 * (lsoa.popn/pct.popn))
pct.2012 <- mutate(pct.2011, lsoa.2012 = alloc.1213 * (lsoa.popn/pct.popn))
ccg.2013a <- mutate(pct.2012, ccg.2013 = (ccg.1314 + pca.1314 + ccgspec.1314))
ccg.2013b <- mutate(ccg.2013a, ccg.2013 = (ccg.2013 * (lsoa.popn/ccg.popn)))
ccg.2014a <- mutate(ccg.2013b, ccg.2014 = (ccg.1415 + pca.1415 + ccgspec.1415))
ccg.2014b <- mutate(ccg.2014a, ccg.2014 = (ccg.2014 * (lsoa.popn/ccg.popn)))
ltph.2013 <- mutate(ccg.2014b, ltph.2013 = ltla.ph.alloc.1314 * (lsoa.popn/ltla.popn))
ltph.2014 <- mutate(ltph.2013, ltph.2014 = ltla.ph.alloc.1415 * (lsoa.popn/ltla.popn))
utph.2013 <- mutate(ltph.2014, utph.2013 = utla.ph.alloc.1314 * (lsoa.popn/utla.popn))
utph.2014 <- mutate(utph.2013, utph.2014 = utla.ph.alloc.1415 * (lsoa.popn/utla.popn))
#=== AGGREGATE 2013 AND 2014 ALLOCATIONS FOR CCG, LAT, LT PH AND UT PH DATA ===
agg_2013_alloc <- mutate(utph.2014, lsoa.2013 = (ccg.2013 + ltph.2013 + utph.2013))
lsoa.alloc <- mutate(agg_2013_alloc, lsoa.2014 = (ccg.2014 + ltph.2014 + utph.2014))
#=== CREATE ANNUAL ALLOCATION SUMMARIES BY LOWER TIER LOCAL AUTHORITY ===
grouped.fund <- group_by(lsoa.alloc, ltla.name)
alloc.07 <- summarise(grouped.fund, funding.2007 = sum(lsoa.2007))
alloc.08 <- summarise(grouped.fund, funding.2008 = sum(lsoa.2008))
alloc.09 <- summarise(grouped.fund, funding.2009 = sum(lsoa.2009))
alloc.10 <- summarise(grouped.fund, funding.2010 = sum(lsoa.2010))
alloc.11 <- summarise(grouped.fund, funding.2011 = sum(lsoa.2011))
alloc.12 <- summarise(grouped.fund, funding.2012 = sum(lsoa.2012))
alloc.13 <- summarise(grouped.fund, funding.2013 = sum(lsoa.2013))
alloc.14 <- summarise(grouped.fund, funding.2014 = sum(lsoa.2014))
#=== MERGE ANNUAL ALLOCATION FRAMES ===
alloc.0708 <- left_join(alloc.07, alloc.08, by = "ltla.name")
alloc.0709 <- left_join(alloc.0708, alloc.09, by = "ltla.name")
alloc.0710 <- left_join(alloc.0709, alloc.10, by = "ltla.name")
alloc.0711 <- left_join(alloc.0710, alloc.11, by = "ltla.name")
alloc.0712 <- left_join(alloc.0711, alloc.12, by = "ltla.name")
alloc.0713 <- left_join(alloc.0712, alloc.13, by = "ltla.name")
alloc.0714 <- left_join(alloc.0713, alloc.14, by = "ltla.name")
#===CONVERT FUNDING ALLOCATIONS TO REAL TERMS USING GDP MARKET DEFLATORS===
alloc.07.14 <- mutate(alloc.07.14, funding.2014 = funding.2014 * 0.97204)
alloc.0714 <- mutate(alloc.0714, funding.2014 = funding.2014 * 0.97204)
alloc.0714 <- mutate(alloc.0714, funding.2013 = funding.2013 * 0.95815)
alloc.0714 <- mutate(alloc.0714, funding.2012 = funding.2012 * 0.94206)
alloc.0714 <- mutate(alloc.0714, funding.2011 = funding.2011 * 0.92289)
alloc.0714 <- mutate(alloc.0714, funding.2010 = funding.2010 * 0.90979)
alloc.0714 <- mutate(alloc.0714, funding.2009 = funding.2009 * 0.89346)
alloc.0714 <- mutate(alloc.0714, funding.2008 = funding.2008 * 0.88067)
alloc.0714 <- mutate(alloc.0714, funding.2007 = funding.2007 * 0.85834)
#=== EXPORT TO CSV FILE ===
write.csv(alloc.0714, "allocations.2007_2014.csv")
#=== LOAD IMD AND LA POPULATION FILES ===
ltla.popns <- read.csv("ltla.2011.popns.csv")
ltla.imd.scores <- read.csv("ltla.imd.data.csv")
#=== MERGE LA POPULATION AND IMD DATA ===
alloc.ltlapopn <- left_join(alloc.0714, ltla.popns, by = "ltla.name")
alloc.popn.imd <- left_join(alloc.ltlapopn, ltla.imd.scores, by = "ltla.name")
#=== CREATE QUINTILES OF LA ACCORDING TO IMD SCORE ===
alloc.popn.imdq <- alloc.popn.imd %>% mutate(imdq = ntile(ltla.imd, 5))
#=== LOAD  UNEMPLOYMENT AND HOUSEHOLD INCOME VARIABLES ===
gdhi.ltla <- read.csv("ltla.gdhi.csv")
unemp.ltla <- read.csv("ltla.unemp.csv")
#=== CONVERT VARIABLES FROM WIDE TO LONG FORMAT FOR ANALYSIS ===
library(tidyr)
allocs_long <- gather(alloc.popn.imdq, year, allocation, funding.2007:funding.2014)
gdhi_long <- gather(gdhi.ltla, year, gdhi, gdhi.2007:gdhi.2014)
unemp_long <- gather(unemp.ltla, year, unemp, unemp.2007:unemp.2014)
#=== TRANSFORM YEAR VARIABLE INTO NUMERICAL FIGURE ===
allocs_long$year <- as.factor(allocs_long$year)
gdhi_long$year <- as.factor(gdhi_long$year)
unemp_long$year <- as.factor(unemp_long$year)
levels(allocs_long$year)[levels(allocs_long$year)=="funding.2007"] <- "2007"
levels(allocs_long$year)[levels(allocs_long$year)=="funding.2008"] <- "2008"
levels(allocs_long$year)[levels(allocs_long$year)=="funding.2009"] <- "2009"
levels(allocs_long$year)[levels(allocs_long$year)=="funding.2010"] <- "2010"
levels(allocs_long$year)[levels(allocs_long$year)=="funding.2011"] <- "2011"
levels(allocs_long$year)[levels(allocs_long$year)=="funding.2012"] <- "2012"
levels(allocs_long$year)[levels(allocs_long$year)=="funding.2013"] <- "2013"
levels(allocs_long$year)[levels(allocs_long$year)=="funding.2014"] <- "2014"
levels(gdhi_long$year)[levels(gdhi_long$year)=="gdhi.2007"] <- "2007"
levels(gdhi_long$year)[levels(gdhi_long$year)=="gdhi.2008"] <- "2008"
levels(gdhi_long$year)[levels(gdhi_long$year)=="gdhi.2009"] <- "2009"
levels(gdhi_long$year)[levels(gdhi_long$year)=="gdhi.2010"] <- "2010"
levels(gdhi_long$year)[levels(gdhi_long$year)=="gdhi.2011"] <- "2011"
levels(gdhi_long$year)[levels(gdhi_long$year)=="gdhi.2012"] <- "2012"
levels(gdhi_long$year)[levels(gdhi_long$year)=="gdhi.2013"] <- "2013"
levels(gdhi_long$year)[levels(gdhi_long$year)=="gdhi.2014"] <- "2014"
levels(unemp_long$year)[levels(unemp_long$year)=="unemp.2007"] <- "2007"
levels(unemp_long$year)[levels(unemp_long$year)=="unemp.2008"] <- "2008"
levels(unemp_long$year)[levels(unemp_long$year)=="unemp.2009"] <- "2009"
levels(unemp_long$year)[levels(unemp_long$year)=="unemp.2010"] <- "2010"
levels(unemp_long$year)[levels(unemp_long$year)=="unemp.2011"] <- "2011"
levels(unemp_long$year)[levels(unemp_long$year)=="unemp.2012"] <- "2012"
levels(unemp_long$year)[levels(unemp_long$year)=="unemp.2013"] <- "2013"
levels(unemp_long$year)[levels(unemp_long$year)=="unemp.2014"] <- "2014"
#=== MERGE VARIABLES INTO SINGLE DATAFRAME FOR ANALYSIS
alloc_gdhi <- merge(allocs_long, gdhi_long, by=c("ltla.name", "year"))
alloc_gdhi_unem <- merge(alloc_gdhi, unemp_long, by=c("ltla.name", "year"))
#=== LOAD AMENABLE MORTALITY FILES ===
am_male <- read.csv("am.male.csv", stringsAsFactors = TRUE)
am_female <- read.csv("am.female.csv", stringsAsFactors = TRUE)
#=== MERGE AMENABLE MORTALITY DATA WITH EXPLANATORY VARIABLE DATA FRAME
add_am_male <- merge(alloc_gdhi_unem, am_male, by=c("ltla.name", "year"))
model_data <- merge(add_am_male, am_female, by=c("ltla.name", "year"))
#===CREATE PER CAPITA ALLOCATION VARIABLE BASED ON LTLA POPULATIONS===
model_data <- mutate(model_data, pc.alloc = (allocation/ltla.popn.2011))
#=== EXPORT DATASET FOR INSPECTION TO CSV FILE ===
write.csv(model_data, "merged_data.csv")
#=== CREATE GRAPH OF TRENDS IN ALLOCATION BY LTLAQ (LTLA QUINTILES BY IMD DEPRIVATION SCORE) BETWEEN 2007 AND 2014===
model_data$imdq <- as.factor(model_data$imdq)
calc_imdq_popns = select(model_data, -2,-4,-6,-7,-8,-9,-10,-11)
calc_imdq_popns <- distinct(calc_imdq_popns)
imdq_popns<- calc_imdq_popns %>% group_by(imdq) %>% summarise(quin_popn = sum(ltla.popn.2011))
model_data_imdq_popns <- left_join(model_data, imdq_popns, by = "imdq")
imdq_wts <- mutate(model_data_imdq_popns, weight = (ltla.popn.2011/quin_popn))
imdq_alloc_wts <- mutate(imdq_wts, alloc_wt = (pc.alloc * weight))
grouped_imdq_alloc <- imdq_alloc_wts %>% group_by(imdq, year)
wt_imdq_alloc <- summarise(grouped_imdq_alloc, wtd_alloc = sum(alloc_wt))
library(ggplot2)
ggplot(data = wt_imdq_alloc, aes(x=year, y=wtd_alloc, group = imdq, colour = imdq)) + geom_line() + geom_point(size = 4, shape = 21, fill = "white")
#=== CREATE GRAPHS OF TRENDS IN MALE & FEMALE AMENABLE MORTALITY RATES BY LTLAQ 2007 - 2014 ===
imdq_male_dsr_wts <- mutate(imdq_wts, male_dsr_wt = (male_dsr * weight))
grouped_imdq_male_dsr_wts <- imdq_male_dsr_wts %>% group_by(imdq, year)
wt_male_dsr_imdq <- summarise(grouped_imdq_male_dsr_wts, wt_male_dsr = sum(male_dsr_wt))
ggplot(data = wt_male_dsr_imdq, aes(x=year, y=wt_male_dsr, group=imdq, colour=imdq)) + geom_line() + geom_point(size=4, shape = 21, fill = "white")
imdq_fem_dsr_wts <- mutate(imdq_wts, fem_dsr_wt = (fem_dsr * weight))
grouped_imdq_fem_dsr_wts <- imdq_fem_dsr_wts %>% group_by(imdq, year)
wt_fem_dsr_imdq <- summarise(grouped_imdq_fem_dsr_wts, wt_female_dsr = sum(fem_dsr_wt))
ggplot(data = wt_fem_dsr_imdq, aes(x=year, y=wt_female_dsr, group=imdq, colour=imdq)) + geom_line() + geom_point(size=4, shape = 21, fill = "white")
#=== CENTRE PREDICTOR VARIABLES USING SCALE()
centre_scale <- function(x) { 
scale(x, scale = FALSE) 
}
centred_data <- model_data %>% mutate(allocation = centre_scale(allocation), gdhi = centre_scale(gdhi), unemp = centre_scale(unemp), pc_alloc = 
centre_scale(pc.alloc))
#=== REORDER IMDQ LEVELS SUCH THAT IMDQ1 IS REFERENCE CATEGORY FOR DUMMY VARIABLE===
data <- within(centred_data, imdq <- relevel(imdq, ref = 1))
#=== LOAD PLM PACKAGE FOR FIXED AND RANDOM EFFECTS MODELLING OF PANEL DATA ===
library(plm)
#=== RUN FIXED AND RANDOM EFFECTS MODELS ON DATA
maleam.fe <- plm(male_dsr ~ allocation + gdhi + unemp + (allocation * imdq), data = data, model = "within")
maleam.re <- plm(male_dsr ~ allocation + gdhi + unemp + (allocation * imdq), data = data, model = "random")
femaleam.fe <- plm(fem_dsr ~ allocation + gdhi + unemp + (allocation * imdq), data = data, model = "within")
femaleam.re <- plm(fem_dsr ~ allocation + gdhi + unemp + (allocation * imdq), data = data, model = "random")
summary(maleam.fe)
summary(maleam.re)
summary(femaleam.fe)
summary(femaleam.re)
phtest(maleam.fe, maleam.re)
phtest(femaleam.fe, femaleam.re)
#=== SAVE HISTORY AND ENVIRONMENT ===
savehistory("ccg.pca.model.RHistory")
